parameters:
  - name: webAppName
    type: string

  - name: appServiceName
    type: string
  
  - name: appType
    type: string
  
  - name: azureServiceConnectionName
    type: string

steps:
  - task: UseDotNet@2
    displayName: 'Install .NET 8.0 SDK'
    inputs:
      packageType: 'sdk'
      version: '8.0.x'

  - task: DotNetCoreCLI@2
    displayName: 'Restore Nuget Packages'
    inputs:
      command: 'restore'
      projects: $(System.DefaultWorkingDirectory)/src/WebApps/${{ parameters.webAppName }}/*.csproj
      feedsToUse: 'select'

  - task: DotNetCoreCLI@2
    displayName: 'Build and Publish'
    inputs:
      command: 'publish'
      projects: $(System.DefaultWorkingDirectory)/src/WebApps/${{ parameters.webAppName }}/*.csproj
      publishWebProjects: false
      arguments: "-o $(Build.ArtifactStagingDirectory)/${{ parameters.webAppName }} --configuration Release"

  - task: PublishPipelineArtifact@1
    displayName: 'Publish artifact'
    inputs:
      targetPath: "$(Build.ArtifactStagingDirectory)/${{ parameters.webAppName }}"
      artifact: ${{ parameters.appServiceName }}
      publishLocation: "pipeline"

  - script: |
          echo "webAppName: ${{ parameters.webAppName }}"
          echo "appServiceName: ${{ parameters.appServiceName }}"
          echo "appType: ${{ parameters.appType }}"
          echo "azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}"
          echo "targetPath: $(Build.ArtifactStagingDirectory)/${{ parameters.webAppName }}"
          echo "artifact: ${{ parameters.appServiceName }}"
          echo "package: $(Pipeline.workspace)/${{ parameters.appServiceName }}/${{ parameters.webAppName }}.zip"

    displayName: 'Print variables using Bash from build-deploy-webapp-template.yaml'

  - task: AzureWebApp@1
    displayName: 'Deploy Azure Web App'
    inputs:
      azureSubscription: ${{ parameters.azureServiceConnectionName }}
      appType: ${{ parameters.appType }}
      appName: ${{ parameters.appServiceName }}
      package: '$(Build.ArtifactStagingDirectory)/${{ parameters.webAppName }}/${{ parameters.webAppName }}.zip'

  # - template: deploy-webapp-template.yaml
  #   parameters:
  #     webAppName: ${{ parameters.webAppName }}
  #     appServiceName: ${{ parameters.appServiceName }}
  #     appType: ${{ parameters.appType }}
  #     azureServiceConnectionName: ${{ parameters.azureServiceConnectionName }}
