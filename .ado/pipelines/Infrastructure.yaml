trigger: none
#  branches:
#    include:
#      - main
#  paths:
#    include:
#      - .ado/*
#      - .azure/*

pool:
  name: 'Minecraft server'
  vmImage: 'ubuntu-latest'

variables:
  - group: 'Production Variables'

pr: none

steps:
  - task: AzureCLI@2
    displayName: Create or update the resource group
    inputs:
      azureSubscription: '$(azureServiceConnectionName)'
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        az group create --location $(location) --name $(resourceGroupName)

  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Deploy all infrastructure'
    inputs:
      connectedServiceName: $(azureServiceConnectionName)
      location: $(location)
      resourceGroupName: $(resourceGroupName)
      csmFile: .azure/bicep/infrastructure.bicep
      overrideParameters: 
        -appName $(appName)
        -env $(environment)
      deploymentOutputs: infrastructureAsCodeOutputs

  - powershell: |

      # Convert JSON-like string to a PowerShell object
      $variables = ConvertFrom-Json '$(infrastructureAsCodeOutputs)'

      # Access specific properties
      $cosmosDBEndpoint = $variables.cosmosDBEndpoint.value
      $cosmosDBKey = $variables.cosmosDBKey.value
      $cosmosDBContainerName = $variables.cosmosDBContainerName.value
      $cosmosDBDatabaseName = $variables.cosmosDBDatabaseName.value


      # Output the values to verify
      # Write-Host "Cosmos DB Key: $cosmosDBKey"
      # Write-Host "Cosmos DB Container Name: $cosmosDBContainerName"
      # Write-Host "Cosmos DB Database Name: $cosmosDBDatabaseName"
      # Write-Host "Cosmos DB Endpoint: $cosmosDBEndpoint"
      # Write-Host "Cosmos DB Location: $cosmosDBLocation"

      # $cosmosDBEndpoint=$var.cosmosDBEndpoint.value

      echo "##vso[task.setvariable variable=cosmosDBEndpoint]$cosmosDBEndpoint"
      echo "##vso[task.setvariable variable=cosmosDBKey]$cosmosDBKey"
      echo "##vso[task.setvariable variable=cosmosDBContainerName]$cosmosDBContainerName"
      echo "##vso[task.setvariable variable=cosmosDBDatabaseName]$cosmosDBDatabaseName"
#      Write-Host "Value of cosmosDBEndpoint is: $cosmosDBEndpoint"

  # - script: env
  #   displayName: 'Print environment variables'

  # - script: which python3
  #   displayName: 'Locate Python3'

  - script: /usr/bin/pip3 install -r .ado/pipelines/python/requirements.txt
    displayName: 'Install Python dependencies'

  - script: /usr/bin/python3 .ado/pipelines/myscript.py --endpoint $(cosmosDBEndpoint) --key $(cosmosDBKey) --database $(cosmosDBDatabaseName) --container $(cosmosDBContainerName)
    displayName: 'Execute Python script'
